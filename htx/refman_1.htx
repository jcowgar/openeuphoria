<_init_comment>
<html>
<head><title>Euphoria v3.0 Reference Manual Part I - Section 1 </title>
<_css>
</head>
<body bgcolor="#FFFFFF" link="#0033BB" vlink="#006699">
<_width>
<_center><font color="#006633" size=+2><b>
<br>
                         Part I - Core Language
</b></font></_center>

<_center><font color="#FF0099" size=+2>
<br>
                            1. Introduction
</font></_center>
<p>&nbsp;<br>

 <font color="#993333"><b>Euphoria</b></font> is a programming language
 with the following advantages over conventional languages:

<ul type=circle>
<li>
      a remarkably simple, flexible, powerful language definition
      that is easy to learn and use.

<p><li>
      dynamic storage allocation. Variables grow or shrink
        without the programmer having to worry about allocating
        and freeing chunks of memory.  Objects of any size can be
        assigned to an element of a Euphoria sequence (array).

<p><li>
      a high-performance, state-of-the-art interpreter that's
        <font color="#CC0099"><b><i>30 times</i></b></font> faster
        than conventional interpreters such as Perl and Python.

<p><li>
      an optimizing Euphoria To C Translator, that can boost your speed
      even further, often by a factor of 2x to 5x versus the already-fast 
      interpreter.
      
<p><li>
      extensive run-time checking for: out-of-bounds subscripts,
        uninitialized variables, bad parameter values for library
        routines, illegal value assigned to a variable and many
        more.  There are no mysterious machine exceptions -- you
        will always get a full English description of any problem
        that occurs with your program at run-time, along with a
        call-stack trace-back and a dump of all of your variable
        values.  Programs can be debugged quickly, easily and
        more thoroughly.

<p><li>
      features of the underlying hardware are completely hidden.
      Programs are not aware of word-lengths, underlying bit-level
      representation of values, byte-order etc.

<p><li>
      a full-screen source debugger and an execution profiler
      are included, along with a full-screen, multi-file editor.
      On a color monitor, the editor displays Euphoria programs in
      multiple colors, to highlight comments, reserved words,
      built-in functions, strings, and level of nesting of brackets.
      It optionally performs auto-completion of statements,
      saving you typing effort and reducing syntax errors. This
      editor is written in Euphoria, and the source code is
      provided to you without restrictions. You are free to
      modify it, add features, and redistribute it as you wish.

<p><li>
      Euphoria programs run under Linux, FreeBSD, 32-bit Windows, and any
      DOS environment, and are not subject to any 640K memory
      limitations. You can create programs that use the full multi-megabyte
      memory of your computer, and a swap file is automatically used when a
      program needs more memory than exists on your machine.

<p><li>
      You can make a single, stand-alone <b>.</b>exe file from your program.

<p><li>
      Euphoria routines are naturally generic. The example program below
        shows a single routine that will sort any type of data -- integers,
        floating-point numbers, strings etc. Euphoria is not an
        "object-oriented" language, yet it achieves many of the benefits of
        these languages in a much simpler way.

<p><li>
     Euphoria is completely free and open source.

</ul>
<p>
<hr>

<a name=1></a>
<font color="#FF0099" size=+1>
<br>

<_dul>1.1 Example Program</_dul>

</font>
<p>

 The following is an example of a complete Euphoria program.

<p>
<_eucode>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 sequence list, sorted_list

 function merge_sort(sequence x)
 -- put x into ascending order using a recursive merge sort
     integer n, mid
     sequence merged, a, b

     n = length(x)
     if n = 0 or n = 1 then
         return x  -- trivial case
     end if

     mid = floor(n/2)
     a = merge_sort(x[1..mid])       -- sort first half of x
     b = merge_sort(x[mid+1..n])     -- sort second half of x

     -- merge the two sorted halves into one
     merged = {}
     while length(a) > 0 and length(b) > 0 do
         if compare(a[1], b[1]) < 0 then
             merged = append(merged, a[1])
             a = a[2..length(a)]
         else
             merged = append(merged, b[1])
             b = b[2..length(b)]
         end if
     end while
     return merged & a & b  -- merged data plus leftovers
 end function

 procedure print_sorted_list()
 -- generate sorted_list from list
     list = {9, 10, 3, 1, 4, 5, 8, 7, 6, 2}
     sorted_list = merge_sort(list)
     ? sorted_list
 end procedure

 print_sorted_list()     -- this command starts the program


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
</_eucode>
<p>

 The above example contains 4 separate commands that are processed in order.
 The first declares two variables: list and sorted_list to be
 <a class="brown" href="refman_2.htm#1"><b>sequences</b></a>
 (flexible arrays). The second defines a
 <a class="brown" href="refman_2.htm#412"><b>function</b></a>
 merge_sort(). The third defines a <a class="brown" href="refman_2.htm#411">
 <b>procedure</b></a> print_sorted_list().
 The final command calls procedure print_sorted_list().

<p>
 The output from the program will be: <br>
 <font face="Arial, Helvetica">
 &nbsp;&nbsp;&nbsp;&nbsp;{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}.
 </font>

<p><font color="#CC0099"><b>
 merge_sort() will just as easily sort
 <font face="Arial, Helvetica"> {1.5, -9, 1e6, 100} </font> or
 <font face="Arial, Helvetica"> {"oranges", "apples", "bananas"} </font>.
 </b></font>

<p>
 This example is stored as <font color="#5500FF">
 <b>euphoria\tutorial\example.ex</b></font>. This is not the fastest
 way to sort in Euphoria. Go to the
 <font color="#5500FF"><b>euphoria\demo</b></font> directory and type
 "ex allsorts" to see timings on several different sorting algorithms for
 increasing numbers of objects. For a quick tutorial example of Euphoria
 programming see
 <font color="#5500FF"><b>euphoria\demo\bench\filesort.ex</b></font>.

<p>
<hr>

<a name=2></a>
<font color="#FF0099" size=+1>
<br>

<_dul>1.2 Installation</_dul>

</font>
<p>

 To install Euphoria on your machine, first read the file
 <a class="blue" href="install.htm"><b>install.doc</b></a>.
 Installation simply involves copying the
 <font color="#993333"><b>euphoria</b></font> files to your hard disk
 under a directory named "euphoria", and then modifying your
 <b>autoexec.bat</b> file
 so that <font color="#5500FF"><b>euphoria\bin</b></font>
 is on your search path, and the
 environment variable <b>EUDIR</b> is set to the euphoria directory. 

<p>
 When installed, the <font color="#993333"><b>euphoria</b></font> directory
 will look something like this:

<dl>
<dt>
        <font color="#5500FF"><b>\euphoria</b></font>
<dl>
<dt>
                readme.doc
<dt>
                readme.htm
<dt>
                License.txt
<dt>
                <font color="#5500FF"><b>\bin</b></font>
<dd>
                        Interpreters ex.exe and exw.exe. Translators ec.exe and ecw.exe. 
                        Or on Linux/FreeBSD, Interpreter exu and Translator ecu.
                        There are also utility programs such as ed.bat, guru.bat etc.
<dt>
                <font color="#5500FF"><b>\include</b></font>
<dd>
                        standard include files, e.g. graphics.e
<dt>
                <font color="#5500FF"><b>\source</b></font>
<dd>
                        the complete source code (interpreter, translator, binder)
<dt>
                <font color="#5500FF"><b>\doc</b></font>
<dd>
                        refman.doc, library.doc, and several other plain-text
                        documentation files
<dt>
                <font color="#5500FF"><b>\html</b></font>
<dd>
                        HTML files corresponding to each of the .doc files
                        in the doc directory
<dt>
                <font color="#5500FF"><b>\tutorial</b></font>
<dd>
                        small tutorial programs to help you learn Euphoria
<dt>
                <font color="#5500FF"><b>\demo</b></font>
<dl>
<dt>
                        generic demo programs that run on all platforms
<dt>
                        <font color="#5500FF"><b>\dos32</b></font>
<dd>
                                DOS32-specific demo programs (optional)
<dt>
                        <font color="#5500FF"><b>\win32</b></font>
<dd>
                                WIN32-specific demo programs (optional)
<dt>
                        <font color="#5500FF"><b>\linux</b></font>
<dd>
                                Linux/FreeBSD-specific demo programs (optional)
<dt>
                        <font color="#5500FF"><b>\langwar</b></font>
<dd>
                                language war game (pixel-graphics version for DOS,
                                or text version for Linux/FreeBSD)
<dt>
                        <font color="#5500FF"><b>\bench</b></font>
<dd>
                                benchmark programs
</dl>
</dl>
</dl>

<p>
The Linux subdirectory is not included in the DOS/Windows distribution,
and the dos32 and win32 subdirectories are not included in the Linux/FreeBSD
distribution. In this manual, directory names are shown using backslash
(<b>\</b>). Linux/FreeBSD users should substitute forward slash (<b>/</b>).

<hr>

<a name=3></a>
<font color="#FF0099" size=+1>
<br>
<p>
<_dul>1.3 Running a Program</_dul>

</font>
<p>

 Euphoria programs are executed by typing
 <font color="#993333"><_bq>ex</_bq></font>,
 <font color="#993333"><_bq>exw</_bq></font> or
 <font color="#993333"><_bq>exu</_bq></font>
 followed by the name of the main Euphoria file. You can type additional
 words (known as <font color="#993333"><b>arguments</b></font>) on this line,
 known as the <font color="#993333"><b>command-line</b></font>.
 Your program can call the built-in function
 <a href="lib_c_d.htm#command_line">command_line()</a> to read the
 command-line.
 The DOS32 version of the
 Euphoria interpreter is called
 <font color="#993333"><b>ex.exe</b></font>. The WIN32 version
 is called
 <font color="#993333"><b>exw.exe</b></font>. The Linux/FreeBSD version
 is called <font color="#993333"><b>exu</b></font>. By convention, main 
 Euphoria
 files have an extension of <_bq>.ex</_bq>, <_bq>.exw</_bq> or 
 <_bq>.exu</_bq>.  Other
 Euphoria files, that are meant to be included in a larger program, end in
 <_bq>.e</_bq> or sometimes <_bq>.ew</_bq> or <_bq>.eu</_bq>.
 To save typing, you can leave off the ".ex", and
 the <font color="#993333"><b>ex</b></font> command will supply it for you
 automatically. <font color="#993333"><b>exw.exe</b></font> will supply
 ".exw", and <font color="#993333"><b>exu</b></font> 
 will supply ".exu". Each will try the other possible extensions as well
 if the default fails. If the file can't be found in the current directory,
 your PATH will be searched. You can redirect standard input and standard
 output when you run a Euphoria program, for example:

<pre>
        ex filesort.ex < raw.txt > sorted.txt
</pre>
           or simply,
<pre>
        ex filesort < raw.txt > sorted.txt
</pre>

<p>
Unlike many other compilers and interpreters, there are no special
command-line options for <font color="#993333"><b>ex</b></font>,
<font color="#993333"><b>exw</b></font> or
<font color="#993333"><b>exu</b></font>. Only the name of your
Euphoria file is expected, and if you don't supply it, you
will be prompted for it.

<p>
 For frequently-used programs under DOS/Windows you might want to make a small 
 <b>.bat</b> (batch) file, perhaps called <b>myprog.bat</b>, 
 containing two statements like:
<pre>
        @echo off
        ex myprog.ex %1 %2 %3
</pre>
 The first statement turns off echoing of commands to the screen. The second
 runs <b>ex myprog.ex</b> with up to 3 command-line arguments.
 See <a href="lib_c_d.htm#command_line">command_line()</a> for an example of
 how to read these arguments. If your program takes more arguments, you
 should add %4 %5 etc. Having a .bat file will save you the minor
 inconvenience of typing <font color="#993333"><_bq>ex</_bq></font>
 (or <font color="#993333"><_bq>exw</_bq></font>) all the time, i.e.
 you can just type:
<pre>
        myprog
</pre>
instead of:
<pre>
        ex myprog
</pre>
 Unfortunately DOS will not allow redirection of standard input and output
 when you use a <b>.bat</b> file
<p>
Under Linux/FreeBSD, you can type the path to the Euphoria interpreter
on the first line of your main file, e.g. if your
program is called foo.exu:

<pre>
        #!/home/rob/euphoria/bin/exu
        
        procedure foo()
            ? 2+2
        end procedure

        foo()
</pre>
Then if you make your file executable:
<pre>
        chmod +x foo.exu
</pre>
You can just type: 
<pre>
        foo.exu 
</pre>
to run your program. You could even shorten the name to simply "foo".
Euphoria ignores the first line when it starts with <b>#!</b>. 
Be careful though that your first line ends with the Linux/FreeBSD-style \n,
and not the DOS/Windows-style \r\n, or the Linux/FreeBSD shell might get confused. 
If your file is shrouded, you must give the path to backendu, not exu.

<p>
 You can also run <font color="#5500FF"><b>bind.bat</b></font> (DOS32),
 or <font color="#5500FF"><b>bindw.bat</b></font> (WIN32)
 or <font color="#5500FF"><b>bindu</b></font> (Linux/FreeBSD) to
 combine your Euphoria program with <font color="#993333"><b>ex.exe</b></font>,
 <font color="#993333"><b>exw.exe</b></font> or
 <font color="#993333"><b>exu</b></font>,
 to make a stand-alone executable file (<b>.exe</b> file on DOS/Windows).
 With a stand-alone <b>.exe</b> file you
 <font color="#CC0099"><i><_ba>can</_ba></i></font> redirect standard
 input and output. Binding is discussed further in
 <a href="refman_1.htm#5">1.5 Distributing a Program</a>.

<p>
Using the <a href=e2c.htm>Euphoria to C Translator</a>, you can also make 
a stand-alone .exe file, and it will normally run much faster than a bound
program.

<p>
  
 <font color="#993333"><b>exu</b></font> or 
 <font color="#993333"><b>ex.exe</b></font> and
 <font color="#993333"><b>exw.exe</b></font>  
 will be in the
 <font color="#5500FF"><b>euphoria\bin</b></font>
 directory which must be on your
 search path. The environment variable EUDIR should be set to the main
 Euphoria directory, e.g. <font color="#5500FF"><b>c:\euphoria</b></font>.

<p>

<a name=31></a>
<font color="#FF0099" size=+1>
<br>

<_sul>1.3.1 Running under Windows</_sul>

</font>
<p>

 You can run Euphoria programs directly from the Windows environment, or from
 a DOS shell that you have opened from Windows. By "associating" <b>.ex</b>
 files with <font color="#993333"><b>ex.exe</b></font>, and <b>.exw</b> files
 with <font color="#993333"><b>exw.exe</b></font> you can simply double-click
 on a <b>.ex</b> or <b>.exw</b> file to run it. Under Windows you
 would define a new file type for <b>.ex</b>, by clicking on
 My Computer / view / options / file types. It is possible to have several
 Euphoria programs active in different windows. If you turn your program
 into a <b>.exe</b> file, you can simply double-click on it to run it.

<p>

<a name=32></a>
<font color="#FF0099" size=+1>
<br>

<_sul>1.3.2 Use of a Swap File</_sul>

</font>
<p>
 If you run a Euphoria program under Linux/FreeBSD or Windows (or in a DOS shell under
 Windows), and the program runs out of physical memory, it will start using
 "virtual memory". The operating system provides this virtual memory 
 automatically by swapping out the least-recently-used code and data 
 to a system swap file.
 To change the size of the Windows swap file, click on Control Panel / 386
 Enhanced / "virtual memory...". Under OS/2 you can adjust the
 "DPMI_MEMORY_LIMIT" by clicking the Virtual DOS machine icon / "DOS Settings"
 to allocate more extended memory for your program.

<p>
 Under pure DOS, outside of Windows, there is no system swap file so the
 DOS-extender built in to <font color="#993333"><b>ex.exe</b></font> (DOS32)
 will create one for possible use by your program.
 See <a class="blue" href="platform.htm#swapfile"><b>platform.doc</b></a>.

<p>
<hr>

<a name=4></a>
<font color="#FF0099" size=+1>
<br>

<_dul>1.4 Editing a Program</_dul>

</font>
<p>

 You can use any text editor to edit a Euphoria program. However, Euphoria
 comes with its own special editor that is written entirely in Euphoria.
 Type: <font color="#993333"><b>ed</b></font>
 followed by the complete name of the file you wish to edit
 (the .ex/.exw/.exu extension is not assumed). You can use this editor to edit any
 kind of
 text file. When you edit a Euphoria file, some extra features such as
 color syntax highlighting and auto-completion of certain statements, are
 available to make your job easier.

<p>
 Whenever you run a Euphoria program and get an error message, during
 compilation or execution, you can simply type
 <font color="#993333"><b>ed</b></font>
 with no file name and you
 will be automatically positioned in the file containing the error, at
 the correct line and column, and with the error message displayed at the
 top of the screen.

<p>
 Under Windows you can associate <font color="#5500FF"><b>ed.bat</b></font>
 with various kinds of text
 files that you want to edit. Color syntax highlighting is provided for
 <b>.ex</b>, <b>.exw</b>, <b>.exu</b>, <b>.e</b>, <b>.ew</b>, <b>.eu</b>, 
 and <b>.pro</b>
 (<a href="refman_3.htm#2">profile</a>) files.

<p>
 Most keys that you type are inserted into the file at the cursor position.
 Hit the <b>Esc</b> key once to get a menu bar of special commands. The arrow
 keys, and the Insert/Delete/Home/End/PageUp/PageDown keys are also active.
 Under Linux/FreeBSD some keys may not be available, and alternate keys are
 provided.
 See the file <font color="#5500FF"><b>euphoria\doc\ed.doc</b></font>
 (<a href="ed.htm">euphoria\html\ed.htm</a>)
 for a complete description of the editing commands. <b>Esc h</b> (help) will
 let you view <font color="#5500FF"><b>ed.doc</b></font> from your editing
 session.

<p>
 If you need to understand or modify any detail of the editor's operation,
 you can edit the file <font color="#5500FF"><b>ed.ex</b></font>
 in <font color="#5500FF"><b>euphoria\bin</b></font>
 (be sure to make a backup
 copy so you don't lose your ability to edit).  If the name
 <font color="#993333"><b>ed</b></font> conflicts
 with some other command on your system, simply rename the file
 <font color="#5500FF"><b>euphoria\bin\ed.bat</b></font> to something else.
 Because this editor is written
 in Euphoria, it is remarkably concise and easy to understand. The same
 functionality implemented in a language like C, would take far more
 lines of code.

<p>
 <b>ed</b> is a simple text-mode editor that runs on DOS, Linux, FreeBSD 
 and the Windows console.
 See also <b>David Cuny</b>'s excellent <b>ee.ex</b> editor for
 DOS and Linux/FreeBSD. You can download
 <b>ee.ex</b> from the <a href="http://www.RapidEuphoria.com">Euphoria Web site</a>.
 There are also some Windows editors oriented to Euphoria.
 These are also on <a href="http://www.RapidEuphoria.com">the Web site</a>.

<p>
<hr>

<a name=5></a>
<font color="#FF0099" size=+1>
<br>

<_dul>1.5 Distributing a Program</_dul>

</font>
<p>

 Euphoria provides you with 4 distinct ways of distributing a program.

<p>
 In the first method you simply ship your users
 <font color="#993333"><b>ex.exe</b></font> or
 <font color="#993333"><b>exw.exe</b></font> or
 <font color="#993333"><b>exu</b></font>
 file, along with your main
 Euphoria .ex, .exw, or .exu file and any .e
 include files that are needed (including any of the standard ones from
 <font color="#5500FF"><b>euphoria\include</b></font>).
 If the Euphoria source files are placed together in one
 directory and ex.exe, exw.exe or exu is placed in the same directory 
 or somewhere on the search path, then your user can run your program by typing
 <font color="#993333"><_bq>ex</_bq></font>
 (<font color="#993333"><_bq>exw</_bq></font>) or
 (<font color="#993333"><_bq>exu</_bq></font>)
 followed
 by the path of your main .ex, .exw, or .exu file.
 You might also provide a small <b>.bat</b> file so people won't actually
 have to type <font color="#993333"><_bq>ex</_bq></font>
 (<font color="#993333"><_bq>exw</_bq></font>). This
 method assumes that you are willing to share your Euphoria source code with
 your users.

<p>
 The Binder gives you two more methods of 
 distribution. You can
 <font color="#993333"><_bq>shroud</_bq></font> your program, or you can
 <font color="#993333"><_bq>bind</_bq></font> your program.
 <font color="#993333"><b>Shrouding</b></font> combines
 all of the .e files that your program needs, along with your main file
 to create a single .il file. 
 <font color="#993333"><b>Binding</b></font> combines your shrouded
 program with backend.exe, backendw.exe or backendu to create a
 <font color="#CC0099"><b>single, stand-alone executable (.exe)</b></font>
 file. For example, if your program is called "myprog<b>.</b>ex"
 you can create "myprog<b>.</b>exe" which will run identically.
 For more information about shrouding and binding, see
 <a class="blue" href="bind.htm"><b>bind.doc</b></a>.

<p>
 Finally, with the <a href=e2c.htm><b>Euphoria To C Translator</b></a>,
 you can 
 <font color="#993333"><_bq>translate</_bq></font> your Euphoria
 program into C and then compile it with a C compiler to get
 an executable (.exe) file. 


<p>

<a name=51></a>
<font color="#FF0099" size=+1>
<br>

<_sul>1.5.1 Licensing</_sul>

</font>
<p>
 This product is free and open source, and has benefited from the contributions
 of many people.
 You have complete royalty-free rights to distribute any Euphoria programs
 that you develop. You are also free to distribute 
 <font color="#993333"><b>ex.exe</b></font>,
 <font color="#993333"><b>exw.exe</b></font> and 
 <font color="#993333"><b>exu</b></font> files
 so anyone can run your program. You can also distribute the interpreter
 backend: <font color="#993333"><b>backend.exe</b></font>, 
 <font color="#993333"><b>backendw.exe</b></font> and 
 <font color="#993333"><b>backendu</b></font>. You can
 can <font color="#993333"><b>shroud</b></font> or
 <font color="#993333"><b>bind</b></font> your program and distribute
 the resulting files royalty-free.

<p>
 You may incorporate any Euphoria source  
 files from this package into 
 your program, either "as is" or with your modifications. 
 (You will probably need at least a few of the standard euphoria\include files 
 in any large program).

<p>
 We would appreciate it if you told people that your program was developed
 using Euphoria, and gave them the address:
 <b><a href="http://www.RapidEuphoria.com">
 http://www.RapidEuphoria.com</a></b>
 of our Web page, but we do not require any such acknowledgment.

 <p>
 Icon files, such as <b>euphoria.ico</b> in euphoria\bin,
 may be distributed with or without your changes. 

<p>
 The high-speed version of the Euphoria Interpreter back-end is written 
 in ANSI C,  and can be compiled
 with many different C compilers. The complete source code is in
 euphoria\source, along with execute.e, the alternate, Euphoria-coded back-end. 
 The generous
 <a href=License.txt><b>open source License</b></a>
 allows both personal and commercial use, and unlike many other
 open source licenses, your changes do not have to be made open source.
 <p>
 Some additional 3rd-party legal restrictions might apply when you use the
 <a href=e2c.htm#legal><b>Euphoria To C Translator</b></a>.
 
<_continue
  href="refman_2.htm"
  name="2. Language Definition"
>

</_width>
</body>
</html>

