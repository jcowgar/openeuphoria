<?xml version="1.0"?>

<makefile>
    <using module="datafiles"/>
    <include file="presets/simple.bkl"/>
	
	<set var="EUC_FLAGS">
		<if cond="FORMAT=='watcom'">
			-wat -D EU_MANAGED_MEM
		</if>
		<if cond="FORMAT=='mingw'">-gcc</if>
	</set>

	<define-rule name="euc" extends="action">
		<template>
			<is-phony />
			<set var="__console">-con</set>
			<set var="__build_dir">$(BUILDDIR)$(DIRSEP)$(id)_dir</set>
			<set var="__output">..$(DIRSEP)$(id)$(EXEEXT)</set>
			<set var="__lib">..$(DIRSEP)$(LIBPREFIX)eu$(LIBEXT)</set>
			<set var="__translate_cmd" eval="0">
				eui ec.ex $(__console) $(EUC_FLAGS) -builddir $(__build_dir) -keep -o $(__output) -lib $(__lib) $(__source)
			</set>
			<command>$(__translate_cmd)</command>
			<dependency-of>all</dependency-of>
		</template>
		<define-tag name="source">
			<set var="__source">$(value)</set>
		</define-tag>
		<define-tag name="windowed">
			<set var="__console"></set>
		</define-tag>
		<define-tag name="library">
			<set var="__lib">$(value)</set>
		</define-tag>
	</define-rule>
	
	<define-rule name="eutest" extends="action">
		<template>
			<is-phony />
			<set var="__cd_cmd" />
			<set var="__translator" />
			<set var="__tests" />
			<set var="__cmd" eval="0">
				$(__cd_cmd)
				eutest $(__translator) $(__tests)
			</set>
			<command>$(__cmd)</command>
		</template>
		<define-tag name="translator">
			<set var="__translator">-ec $(value)</set>
		</define-tag>
		<define-tag name="directory">
			<set var="__cd_cmd">cd $(value)</set>
		</define-tag>
		<define-tag name="tests">
			<set var="__tests">$(value)</set>
		</define-tag>
	</define-rule>
	
	<define-rule name="eudoc" extends="action">
		<template>
			<is-phony />
			<set var="__source_files" />
			<set var="__template_file" />
			<set var="__output_directory" />
			<set var="__cmd" eval="0">
				eui ../tools/eudoc/eudoc.ex -v $(__assembly_file) -o $(id).txt $(__source_files)
				eui ../tools/eudoc/creole/creolehtml.ex -A=ON $(__output_directory) $(__template_file) $(id).txt 
			</set>
			<command>$(__cmd)</command>
		</template>
		<define-tag name="assembly-file">
			<set var="__assembly_file">-a $(value)</set>
		</define-tag>
		<define-tag name="source">
			<set var="__source_files">$(value)</set>
		</define-tag>
		<define-tag name="output-directory">
			<set var="__output_directory">-o$(value)</set>
		</define-tag>
		<define-tag name="template-file">
			<set var="__template_file">-t=$(value)</set>
		</define-tag>
	</define-rule>
</makefile>
