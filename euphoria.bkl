<?xml version="1.0"?>

<makefile>
    <using module="datafiles"/>
    <include file="presets/simple.bkl"/>
	
	<set var="RMDIR">
		<if cond="PLATFORM_WIN32=='1'">-rmdir /s/q</if>
		<if cond="PLATFORM_WIN32=='0'">rm -rf</if>
	</set>
	<set var="CP">
		<if cond="PLATFORM_WIN32=='1'">-copy /y</if>
		<if cond="PLATFORM_WIN32=='0'">cp -f</if>
	</set>
	
	<if cond="FORMAT in ['watcom','mingw']">
		<option name="MANAGED_MEMORY">
	        <values>no,yes</values>
			<default-value>yes</default-value>
	        <values-description>No,Yes</values-description>
			<description>Enable or disable managed memory by using yes/no values</description>
		</option>
	
		<set var="EU_MANAGED_MEMORY">
			<if cond="MANAGED_MEMORY=='yes'">-D EU_MANAGED_MEM</if>
		</set>
		<set var="C_MANAGED_MEMORY">
			<if cond="MANAGED_MEMORY=='yes'">-DMANAGED_MEM</if>
		</set>
	</if>
	<if cond="FORMAT not in ['watcom','mingw']">
		<set var="EU_MANAGED_MEMORY" />
		<set var="C_MANAGED_MEMORY" />
	</if>

	<set var="EU_DEBUG">
		<if cond="DEBUG=='1'">-D DEBUG</if>
	</set>
	<set var="C_DEBUG">
		<if cond="DEBUG=='1'">-DDEBUG</if>
	</set>

	<set var="EUC_FLAGS">
		<if cond="FORMAT=='watcom'">-wat</if>
		<if cond="FORMAT=='mingw'">-gcc</if>
	</set>
	<set var="EUC_FLAGS" append="1">$(EU_DEBUG)</set>
	
	<if cond="PLATFORM_WIN32=='1'">
		<set var="DESTDIR">..$(DIRSEP)</set>
		<set var="BINDIR">bin</set>
		<action id="install">
		</action>
	</if>

	<define-rule name="euc" extends="action">
		<template>
			<is-phony />
			<set var="__console">-con</set>
			<set var="__build_dir">$(BUILDDIR)$(DIRSEP)$(id)_dir</set>
			<set var="__output">..$(DIRSEP)$(id)$(EXEEXT)</set>
			<set var="__lib">..$(DIRSEP)$(LIBPREFIX)eu$(LIBEXT)</set>
			<set var="__cmd" eval="0">
				eui ec.ex $(EU_MANAGED_MEMORY) $(__console) $(EUC_FLAGS) -builddir $(__build_dir) -keep -o $(__output) -lib $(__lib) $(__source)
			</set>
			<command>$(__cmd)</command>
			<dependency-of>all</dependency-of>
			<modify-target target="clean">
				<if cond="FORMAT in ['watcom','mingw']">
					<command>
						-if exist $(BUILDDIR)$(DIRSEP)$(id)$(EXEEXT) del $(BUILDDIR)$(DIRSEP)$(id)$(EXEEXT)
						-if exist $(BUILDDIR)$(DIRSEP)$(id)_dir rmdir /s/q $(BUILDDIR)$(DIRSEP)$(id)_dir
					</command>
				</if>
				<if cond="FORMAT not in ['watcom','mingw']">
					<command>
						rm -f $(BUILDDIR)$(DIRSEP)$(id)$(EXEEXT)
						rm -rf $(BUILDDIR)$(DIRSEP)$(id)_dir
					</command>
				</if>
			</modify-target>
			<modify-target target="install">
				<if cond="PLATFORM_WIN32=='1'">
					<command>
						-$(INSTALL_PROGRAM) $(BUILDDIR)$(DIRSEP)$(id)$(EXEEXT) $(DESTDIR)$(BINDIR)
					</command>
				</if>
				<if cond="PLATFORM_WIN32=='0'">
					<command>
						install -m 755 $(BUILDDIR)$(DIRSEP)$(id)$(EXEEXT) $(DESTDIR)$(BINDIR)
					</command>
				</if>
			</modify-target>
		</template>
		<define-tag name="source">
			<set var="__source">$(value)</set>
		</define-tag>
		<define-tag name="windowed">
			<set var="__console"></set>
		</define-tag>
		<define-tag name="library">
			<set var="__lib">..$(DIRSEP)$(LIBPREFIX)$(value)$(LIBEXT)</set>
			<depends>$(value)</depends>
		</define-tag>
	</define-rule>
	
	<define-rule name="eutest" extends="action">
		<template>
			<is-phony />
			<set var="__cd_cmd" />
			<set var="__translator" />
			<set var="__interpreter">-exe $(BUILDDIR)$(DIRSEP)eui$(EXEEXT)</set>
			<set var="__tests" />
			<set var="__cmd" eval="0">
				$(__cd_cmd)
				eutest $(__interpreter) $(__translator) $(__tests)
			</set>
			<command>$(__cmd)</command>
		</template>
		<define-tag name="interpreter">
			<set var="__interpreter">-exe $(value)</set>
		</define-tag>
		<define-tag name="translator">
			<set var="__translator">-ec $(value)</set>
		</define-tag>
		<define-tag name="directory">
			<set var="__cd_cmd">cd $(value)</set>
		</define-tag>
		<define-tag name="tests">
			<set var="__tests">$(value)</set>
		</define-tag>
	</define-rule>
	
	<define-rule name="eudoc" extends="action">
		<template>
			<is-phony />
			<set var="__source_files" />
			<set var="__template_file" />
			<set var="__output_directory" />
			<set var="__cmd" eval="0">
				eui ../tools/eudoc/eudoc.ex -v $(__assembly_file) -o $(id).txt $(__source_files)
				eui ../tools/eudoc/creole/creolehtml.ex -A=ON $(__output_directory) $(__template_file) $(id).txt 
			</set>
			<command>$(__cmd)</command>
		</template>
		<define-tag name="assembly-file">
			<set var="__assembly_file">-a $(value)</set>
		</define-tag>
		<define-tag name="source">
			<set var="__source_files">$(value)</set>
		</define-tag>
		<define-tag name="output-directory">
			<set var="__output_directory">-o$(value)</set>
		</define-tag>
		<define-tag name="template-file">
			<set var="__template_file">-t=$(value)</set>
		</define-tag>
	</define-rule>
</makefile>
