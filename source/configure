#!/bin/sh
UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
if echo "$UNAME_SYSTEM" | grep CYGWIN; then
	# for now, we build with -mno-cygwin under cygwin, so this is treated
	# identically to MinGW
	# A true exu.exe should probably set UNAME_SYSTEM="CYGWIN"
	UNAME_SYSTEM=WINDOWS
elif echo "$UNAME_SYSTEM" | grep MINGW; then
	UNAME_SYSTEM=WINDOWS
fi

if [ -e source/global.e ]; then
	PREFIX=source/
else
	PREFIX=./
fi

if [ `grep -e "EBSD.*TRUE" "$PREFIX"common.e` ]; then
	ECONFIG=BSD
else
	ECONFIG=LINUX
fi

if test $UNAME_SYSTEM = "Linux"; then
	echo EU_VERSION=`grep -e INTERPRETER_VERSION "$PREFIX"global.e | sed -re "s/^[^0-9\.]*([0-9\.]+)[^0-9\.]*$/\1/"` > "$PREFIX"Makefile.eu
	echo EBSD= >> "$PREFIX"Makefile.eu
	echo EOSX= >> "$PREFIX"Makefile.eu
	echo ELINUX=1 >> "$PREFIX"Makefile.eu
	echo EMINGW= >> "$PREFIX"Makefile.eu
	echo EDJGPP= >> "$PREFIX"Makefile.eu
	ln -f pcre/pcre.h.unix pcre/pcre.h
        ln -f pcre/config.h.unix pcre/config.h
elif test $UNAME_SYSTEM = "MS-DOS"; then
	echo EU_VERSION=`grep -e INTERPRETER_VERSION "$PREFIX"global.e | sed -re "s/^[^0-9\.]*([0-9\.]+)[^0-9\.]*$/\1/"` > "$PREFIX"Makefile.eu
	echo EBSD= >> "$PREFIX"Makefile.eu
	echo EOSX= >> "$PREFIX"Makefile.eu
	echo ELINUX= >> "$PREFIX"Makefile.eu
	echo EMINGW= >> "$PREFIX"Makefile.eu
	echo EDJGPP=1 >> "$PREFIX"Makefile.eu
	cp pcre/pcre.h.windows pcre/pcre.h
	cp pcre/config.h.windows pcre/config.h
elif test $UNAME_SYSTEM = "WINDOWS"; then
	echo EU_VERSION=`grep -e INTERPRETER_VERSION "$PREFIX"global.e | sed -re "s/^[^0-9\.]*([0-9\.]+)[^0-9\.]*$/\1/"` > "$PREFIX"Makefile.eu
	echo EBSD= >> "$PREFIX"Makefile.eu
	echo EOSX= >> "$PREFIX"Makefile.eu
	echo ELINUX= >> "$PREFIX"Makefile.eu
	echo EMINGW=1 >> "$PREFIX"Makefile.eu
	echo EDJGPP= >> "$PREFIX"Makefile.eu
	cp pcre/pcre.h.windows pcre/pcre.h
	cp pcre/config.h.windows pcre/config.h
else
	echo EU_VERSION=`grep -e INTERPRETER_VERSION "$PREFIX"global.e | sed -Ee "s/^[^0-9\.]*([0-9\.]+)[^0-9\.]*$/\1/"` > "$PREFIX"Makefile.eu
	echo EBSD=1 >> "$PREFIX"Makefile.eu
	if test $UNAME_SYSTEM = "Darwin"; then
		echo EOSX=1 >> "$PREFIX"Makefile.eu
	else
		echo EOSX= >> "$PREFIX"Makefile.eu
	fi
	echo ELINUX= >> "$PREFIX"Makefile.eu
	echo EMINGW= >> "$PREFIX"Makefile.eu
	echo EDJGPP= >> "$PREFIX"Makefile.eu
	ln -f pcre/pcre.h.unix pcre/pcre.h
        ln -f pcre/config.h.unix pcre/config.h
fi

case "${UNAME_SYSTEM}:${ECONFIG}" in
	Linux:BSD)
		echo Linux:BSD
		sed -ri -e "s/EBSD = TRUE/EBSD = FALSE/" "$PREFIX"common.e
		sed -ri -e "s/EOSX = TRUE/EOSX = FALSE/" "$PREFIX"common.e
		;;
	*BSD:LINUX)
		echo BSD:Linux
		sed -Ei .bsd -e "s/EBSD = FALSE/EBSD = TRUE/" "$PREFIX"common.e
		;;
	Darwin:LINUX)
		echo Darwin:Linux
		sed -Ei .bsd -e "s/EBSD = FALSE/EBSD = TRUE/" "$PREFIX"common.e
		sed -Ei .osx -e "s/EOSX = FALSE/EOSX = TRUE/" "$PREFIX"common.e
		;;
	*)
		# do nothing
		;;
esac
export BUILDDIR=.
# parameters
while [ "$1" != "" ]; do
    case $1 in
        --without-euphoria )
			export EUPHORIA=0
        ;;
	--eubin )
			echo "EUBIN=$2" >> "$PREFIX"Makefile.eu
			shift
	;;
        --full )
                       echo RELEASE=1 >> "$PREFIX"Makefile.eu
        ;;
        --managed-mem )
		       # currently this is Windows only;
		       export MANAGED_MEM=1
                       echo MANAGED_MEM=1 >> "$PREFIX"Makefile.eu       
	;;
	
        --build )
             		export BUILDDIR=$2
                        mkdir -p $BUILDDIR
			shift
	;;
        --debug )
                       echo EDEBUG=1 >> "$PREFIX"Makefile.eu
        ;;
	* )
			echo "Unknown option '$1'"
			echo "Configures and prepares the euphoria source for building"
			echo
 			echo "configure [options]"
			echo
			echo "Options:"
			echo "    --without-euphoria"
			echo "    --managed-mem       enable managed memory"
			echo "    --eubin value"
			echo "    --build value       set the build directory"
			echo "    --full"
			echo "    --debug             turn debugging on"
			echo
			exit
			;;
    esac
    shift
done
if [ "x$EUPHORIA" = "x" ]; then
	echo EUPHORIA=1 >> "$PREFIX"Makefile.eu
fi
if [ "x$MANAGED_MEM" = "x" ]; then
        if test $UNAME_SYSTEM = "MS-DOS"; then
        	echo "Information: Managed memory always on for DJGPP."
		echo MANAGED_MEM=1 >> "$PREFIX"Makefile.eu 
	fi
fi
export PWD=`pwd`
export PPWD=`cd .. && pwd`
# The following works around a bug in djgpp's pwd
# that at times returns the parent of the current
# directory instead of the current directory.
if [ ! -e "$PPWD"/source ] && [ -e "$PWD"/source ]; then
	# bug is present
	echo "Information: Working around djgpp's PWD bug"
	export PPWD=$PWD
fi
export TRUNKDIR=$PPWD
mkdir -p $BUILDDIR
export BUILDDIR=`cd "$BUILDDIR" && pwd`
echo TRUNKDIR=$TRUNKDIR >> "$PREFIX"Makefile.eu
echo BUILDDIR=$BUILDDIR >> "$PREFIX"Makefile.eu


