#!/bin/sh
UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
if echo "$UNAME_SYSTEM" | grep CYGWIN; then
	# for now, we build with -mno-cygwin under cygwin, so this is treated
	# identically to MinGW
	# A true exu.exe should probably set UNAME_SYSTEM="CYGWIN"
	UNAME_SYSTEM=WINDOWS
elif echo "$UNAME_SYSTEM" | grep MINGW; then
	UNAME_SYSTEM=WINDOWS
fi

if [ -e source/global.e ]; then
	PREFIX=source/
else
	PREFIX=./
fi

if test $UNAME_SYSTEM = "Linux"; then
	echo EBSD= >> "$PREFIX"Makefile.eu
	echo EOPENBSD= >> "$PREFIX"Makefile.eu
	echo ENETBSD= >> "$PREFIX"Makefile.eu
	echo EOSX= >> "$PREFIX"Makefile.eu
	echo ESUNOS= >> "$PREFIX"Makefile.eu
	echo ELINUX=1 >> "$PREFIX"Makefile.eu
	echo EMINGW= >> "$PREFIX"Makefile.eu
	echo EDJGPP= >> "$PREFIX"Makefile.eu
elif test $UNAME_SYSTEM = "MS-DOS"; then
	echo EBSD= >> "$PREFIX"Makefile.eu
	echo ENETBSD= >> "$PREFIX"Makefile.eu
	echo EOPENBSD= >> "$PREFIX"Makefile.eu
	echo EOSX= >> "$PREFIX"Makefile.eu
	echo ESUNOS= >> "$PREFIX"Makefile.eu
	echo ELINUX= >> "$PREFIX"Makefile.eu
	echo EMINGW= >> "$PREFIX"Makefile.eu
	echo EDJGPP=1 >> "$PREFIX"Makefile.eu
elif test $UNAME_SYSTEM = "WINDOWS"; then
	echo EBSD= >> "$PREFIX"Makefile.eu
	echo EOSX= >> "$PREFIX"Makefile.eu
	echo ENETBSD= >> "$PREFIX"Makefile.eu
	echo EOPENBSD= >> "$PREFIX"Makefile.eu
	echo ESUNOS= >> "$PREFIX"Makefile.eu
	echo ELINUX= >> "$PREFIX"Makefile.eu
	echo EMINGW=1 >> "$PREFIX"Makefile.eu
	echo EDJGPP= >> "$PREFIX"Makefile.eu
elif test $UNAME_SYSTEM = "SunOS"; then
	echo EBSD=1 >> "$PREFIX"Makefile.eu
	echo ENETBSD= >> "$PREFIX"Makefile.eu
	echo EOSX= >> "$PREFIX"Makefile.eu
	echo EOPENBSD= >> "$PREFIX"Makefile.eu
	echo ESUNOS=1 >> "$PREFIX"Makefile.eu
	echo ELINUX= >> "$PREFIX"Makefile.eu
	echo EMINGW= >> "$PREFIX"Makefile.eu
	echo EDJGPP= >> "$PREFIX"Makefile.eu
elif test $UNAME_SYSTEM = "OpenBSD"; then
	echo EBSD=1 >> "$PREFIX"Makefile.eu
	echo ENETBSD= >> "$PREFIX"Makefile.eu
	echo EOPENBSD=1 >> "$PREFIX"Makefile.eu
	echo EOSX= >> "$PREFIX"Makefile.eu
	echo ESUNOS= >> "$PREFIX"Makefile.eu
	echo ELINUX= >> "$PREFIX"Makefile.eu
	echo EMINGW= >> "$PREFIX"Makefile.eu
	echo EDJGPP= >> "$PREFIX"Makefile.eu
elif test $UNAME_SYSTEM = "NetBSD"; then
	echo EBSD=1 >> "$PREFIX"Makefile.eu
	echo ENETBSD=1 >> "$PREFIX"Makefile.eu
	echo EOPENBSD= >> "$PREFIX"Makefile.eu
	echo EOSX= >> "$PREFIX"Makefile.eu
	echo ESUNOS= >> "$PREFIX"Makefile.eu
	echo ELINUX= >> "$PREFIX"Makefile.eu
	echo EMINGW= >> "$PREFIX"Makefile.eu
	echo EDJGPP= >> "$PREFIX"Makefile.eu
else
	echo EBSD=1 >> "$PREFIX"Makefile.eu
	if test $UNAME_SYSTEM = "Darwin"; then
		echo EOSX=1 >> "$PREFIX"Makefile.eu
	else
		echo EOSX= >> "$PREFIX"Makefile.eu
	fi
	echo ESUNOS= >> "$PREFIX"Makefile.eu
	echo EOPENBSD= >> "$PREFIX"Makefile.eu
	echo ELINUX= >> "$PREFIX"Makefile.eu
	echo EMINGW= >> "$PREFIX"Makefile.eu
	echo EDJGPP= >> "$PREFIX"Makefile.eu
fi

export BUILDDIR=.
# parameters
while [ "$1" != "" ]; do
    case $1 in
        --without-euphoria )
			export EUPHORIA=0
        ;;
		--eubin )
			echo "EUBIN=$2" >> "$PREFIX"Makefile.eu
			shift
		;;
        --full )
			echo RELEASE=1 >> "$PREFIX"Makefile.eu
        ;;
	
        --build )
			export BUILDDIR=$2
			shift
		;;
        --debug )
			echo EDEBUG=1 >> "$PREFIX"Makefile.eu
        ;;
		* )
			echo "Unknown option '$1'"
			echo "Configures and prepares the euphoria source for building"
			echo
 			echo "configure [options]"
			echo
			echo "Options:"
			echo "    --without-euphoria"
			echo "    --eubin value"
			echo "    --build value       set the build directory"
			echo "    --full"
			echo "    --debug             turn debugging on"
			echo
			exit
			;;
    esac
    shift
done
if [ "x$EUPHORIA" = "x" ]; then
	echo EUPHORIA=1 >> "$PREFIX"Makefile.eu
fi
if [ "x$MANAGED_MEM" = "x" ]; then
        if test $UNAME_SYSTEM = "MS-DOS"; then
        	echo "Information: Managed memory always on for DJGPP."
		echo MANAGED_MEM=1 >> "$PREFIX"Makefile.eu 
	fi
fi
export PWD=`pwd`
export PPWD=`cd .. && pwd`
# The following works around a bug in djgpp's pwd
# that at times returns the parent of the current
# directory instead of the current directory.
if [ ! -e "$PPWD"/source ] && [ -e "$PWD"/source ]; then
	# bug is present
	echo "Information: Working around djgpp's PWD bug"
	export PPWD=$PWD
fi
export TRUNKDIR=$PPWD
mkdir -p $BUILDDIR
export BUILDDIR=`cd "$BUILDDIR" && pwd`
echo TRUNKDIR=$TRUNKDIR >> "$PREFIX"Makefile.eu
echo BUILDDIR=$BUILDDIR >> "$PREFIX"Makefile.eu

# Make a generic Makefile that simply includes Makefile.gnu
echo include Makefile.gnu > Makefile
