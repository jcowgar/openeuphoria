include types.e
include unittest.e

set_test_module_name("types.e")

test_true("bool() #1", bool(1))
test_true("bool() #2", bool(TRUE))
test_true("bool() #5", bool(0))
test_true("bool() #6", bool(FALSE))
test_false("bool() #9", bool('a'))
test_false("bool() #10", bool('1'))
test_equal("bool() #11", {0,0,0,0}, bool("John"))
test_equal("bool() #12", {1,0}, bool({0,5}))

test_equal("t_alnum() #1", 1, t_alnum('a'))
test_equal("t_alnum() #2", 1, t_alnum('A'))
test_equal("t_alnum() #3", 0, t_alnum('-'))
test_equal("t_alnum() #4", 0, t_alnum('('))
test_equal("t_alnum() #5", 1, t_alnum('0'))
test_equal("t_alnum() #6", 1, t_alnum('8'))
test_equal("t_alnum() #7", {1,1,0,0}, t_alnum("ab-!"))

test_equal("t_alpha() #1", 1, t_alpha('a'))
test_equal("t_alpha() #2", 1, t_alpha('Z'))
test_equal("t_alpha() #3", 1, t_alpha('b'))
test_equal("t_alpha() #4", 1, t_alpha('g'))
test_equal("t_alpha() #5", 0, t_alpha('-'))
test_equal("t_alpha() #6", 0, t_alpha('.'))
test_equal("t_alpha() #7", 0, t_alpha('0'))
test_equal("t_alpha() #8", 0, t_alpha('3'))
test_equal("t_alpha() #9", {1,1,0,0}, t_alpha("ab9."))

test_equal("t_ascii() #1", 1, t_ascii('~'))
test_equal("t_ascii() #2", 1, t_ascii('a'))
test_equal("t_ascii() #3", 0, t_ascii(232))
test_equal("t_ascii() #4", {1,1,0,0}, t_ascii({52, 99, 132, 232}))

test_equal("t_cntrl() #1", 1, t_cntrl(7))
test_equal("t_cntrl() #2", 0, t_cntrl('h'))
test_equal("t_cntrl() #3", 1, t_cntrl(30))
test_equal("t_cntrl() #4", {1,1,0,0}, t_cntrl({7,18,'a', '8'}))

test_equal("t_digit() #1", 1, t_digit('3'))
test_equal("t_digit() #2", 0, t_digit(0))
test_equal("t_digit() #3", 0, t_digit('a'))
test_equal("t_digit() #4", {1,1,0,0}, t_digit({'3', '9', 'z', 'g'}))

test_equal("t_graph() #1", 1, t_graph('A'))
test_equal("t_graph() #2", 0, t_graph(8))
test_equal("t_graph() #3", 0, t_graph(200))
test_equal("t_graph() #3", {1,1,0,0}, t_graph({'A', '4', 1, 253}))

test_equal("t_lower() #1", 1, t_lower('a'))
test_equal("t_lower() #2", 1, t_lower('z'))
test_equal("t_lower() #3", 0, t_lower('A'))
test_equal("t_lower() #4", 0, t_lower(13))
test_equal("t_lower() #5", {1,1,0,0}, t_lower("joH9"))

test_equal("t_print() #1", 1, t_print('A'))
test_equal("t_print() #2", 1, t_print(' '))
test_equal("t_print() #3", 0, t_print(2))
test_equal("t_print() #4", 0, t_print(200))
test_equal("t_print() #5", {1,1,0,0}, t_print({'a', '#', 7, 224}))

test_equal("t_punct() #1", 1, t_punct('.'))
test_equal("t_punct() #2", 1, t_punct('~'))
test_equal("t_punct() #3", 1, t_punct('!'))
test_equal("t_punct() #4", 1, t_punct('-'))
test_equal("t_punct() #5", 0, t_punct('a'))
test_equal("t_punct() #6", 0, t_punct('Z'))
test_equal("t_punct() #7", {1,1,0,0}, t_punct({'!', '.', 'm', '9'}))

test_equal("t_space() #1", 1, t_space(' '))
test_equal("t_space() #2", 0, t_space('j'))
test_equal("t_space() #3", 1, t_space('\n'))
test_equal("t_space() #4", 1, t_space('\r'))
test_equal("t_space() #5", 1, t_space('\t'))
test_equal("t_space() #6", 1, t_space(11))
test_equal("t_space() #7", {1,1,0,0}, t_space({' ', '\n', 'J', '4'}))

test_equal("t_upper() #1", 1, t_upper('A'))
test_equal("t_upper() #2", 1, t_upper('Z'))
test_equal("t_upper() #3", 0, t_upper('.'))
test_equal("t_upper() #4", 0, t_upper('a'))
test_equal("t_upper() #5", {1,1,0,0}, t_upper({'D', 'Z', '$', '9'}))

test_equal("t_xdigit() #1", 1, t_xdigit('0'))
test_equal("t_xdigit() #2", 1, t_xdigit('9'))
test_equal("t_xdigit() #3", 1, t_xdigit('A'))
test_equal("t_xdigit() #4", 1, t_xdigit('a'))
test_equal("t_xdigit() #5", 1, t_xdigit('F'))
test_equal("t_xdigit() #6", 1, t_xdigit('f'))
test_equal("t_xdigit() #7", 0, t_xdigit('h'))
test_equal("t_xdigit() #8", 0, t_xdigit('z'))
test_equal("t_xdigit() #9", {1,1,0,0}, t_xdigit({'0', 'F', '?', 't'}))
